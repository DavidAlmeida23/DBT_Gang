/** 
* _CodeCache is a Java class represention of one of the components
* of the Reference Architecture of TOP_LEVEL.
* <p>
* It extends from the class Component like all other elements of TOP_LEVEL because
* this model follows the Composite design patter and SCA (Service Component Architecture)
* <p>
* It also implements the following services:
* <ul>
* <li>_i_CCache</li>
* </ul>
* <p>
* In addendum, this class also encapsulates all the configurable properties of the 
* component it represent, as well as all the accessor methods to change its values
*
* <b>NOTE:</b> Code autmatically generated by Elaboration Language
*
* @author ESRG (Embedded Systems Research Group) class of 2015/2016
* @version 1.0 
* @since 02/05/2016
*/

package EL.Components;

import java.util.ArrayList;
import java.util.Arrays;
import EL.ElaborationError;

public class _CodeCache extends Component implements _i_CCache
{
	//-------------------------- NO SUBCOMPONENTS -------------------------//
	
	
	//----------------------------- REFERENCES ----------------------------//
	protected _i_ISA _r_ISA;
	
	//----------------------------- PROPERTIES ----------------------------//
	private int _CCache_Size;

	public _CodeCache()
	{
		//There are no subcomponents to be initialized.
		
		
		//There are bindings to be done.
	}
	//---------------------------------------------------------------------//
	//-------------------- PROPERTIES ACCESSOR METHODS --------------------//
	//---------------------------------------------------------------------//
	/**
	* Getter method for _CCache_Size
	*
	* @return _CCache_Size (Property in _CodeCache)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/			
	public int get_CCache_Size()
	{
		return this._CCache_Size;
	}						
		
	/**
	* Setter method for _CCache_Size taking the restriction associated to _CCache_Size 
	* into account.
	*
	* @param _arg (Value to set _CCache_Size in _CodeCache)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_CCache_Size(int _arg)
	{
		this._CCache_Size = _arg;
	}
	
	/**
	* Setter method for _CCache_Size with no restrictions and no parameters.
	* Asserting the value of _CCache_Size to its default value.
	*
	* @param null 
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_CCache_Size()
	{
		ElaborationError.elaborationError("No value to be assigned to _CCache_Size.");
	}
	//---------------------------------------------------------------------//
	//----------------- END OF PROPERTIES ACCESSOR METHODS ----------------//
	//---------------------------------------------------------------------//
	
	//---------------------------------------------------------------------//
	//--------------------- REFERENCES ACCESSOR METHODS -------------------//
	//---------------------------------------------------------------------//
	/**
	* Getter method for _r_ISA which type is _i_ISA
	*
	* @return _r_ISA (Reference in _CodeCache)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _i_ISA get_r_ISA()
	{
		return this._r_ISA;
	}
	/**
	* Setter method for _r_ISA which type is _i_ISA
	*
	* @param _arg (Component to set r_ISA in _CodeCache that implements _i_ISA)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_r_ISA(_i_ISA _arg)
	{
		this._r_ISA = _arg;
	}			
	//---------------------------------------------------------------------//
	//----------------- END OF REFERENCES ACCESSOR METHODS ----------------//	
	//---------------------------------------------------------------------//	
	
	//---------------------------------------------------------------------//
	//--------------------- SERVICES ACCESSOR METHODS ---------------------//
	//---------------------------------------------------------------------//
	/**
	* Getter method for the component that implements _i_CCache
	*
	* @return this (Component _CodeCache)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public Component get_i_CCache()
	{
		return this;
	}
	
	//---------------------------------------------------------------------//
	//------------------ END OF SERVICES ACCESSOR METHODS -----------------//
	//---------------------------------------------------------------------//
}	
