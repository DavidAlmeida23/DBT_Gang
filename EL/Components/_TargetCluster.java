/** 
* _TargetCluster is a Java class represention of one of the components
* of the Reference Architecture of TOP_LEVEL.
* <p>
* It extends from the class Component like all other elements of TOP_LEVEL because
* this model follows the Composite design patter and SCA (Service Component Architecture)
* <p>
* This class contains objects(subcomponents) of the following types:
* <ul>
* <li>_Architecture</li>	
* <li>_Generator</li>	
* </ul>
* <p>
* In addendum, this class also encapsulates all the configurable properties of the 
* component it represent, as well as all the accessor methods to change its values
*
* <b>NOTE:</b> Code autmatically generated by Elaboration Language
*
* @author ESRG (Embedded Systems Research Group) class of 2015/2016
* @version 1.0 
* @since 02/05/2016
*/

package EL.Components;

import java.util.ArrayList;
import java.util.Arrays;
import EL.ElaborationError;

public class _TargetCluster extends Component 
{
	//--------------------------- SUBCOMPONENTS ---------------------------//
	protected _Architecture _target;
	protected _Generator _gen;
	
	//--------------------------- NO REFERENCES ---------------------------//

	
	//--------------------------- NO PROPERTIES ---------------------------//


	public _TargetCluster()
	{
		//Initialization of subcomponents.
		_target = new _Architecture();
		_gen = new _Generator();
		
		//Binding references to services.
		_gen.set_r_ISA((_i_ISA)_target.get_i_ISA());
		_gen.set_r_TrgRegisters((_i_Registers)_target.get_i_Registers());
	}
	//---------------------------------------------------------------------//
	//------------------- SUBCOMPONENTS ACCESSOR METHODS ------------------//
	//---------------------------------------------------------------------//
	/**
	* Getter method for the subcomponent _Architecture of _TargetCluster
	*
	* @return _Architecture
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _Architecture get_target()
	{
		return this._target;
	}
	/**
	* Getter method for the subcomponent _Generator of _TargetCluster
	*
	* @return _Generator
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _Generator get_gen()
	{
		return this._gen;
	}
	//---------------------------------------------------------------------//
	//--------------- END OF SUBCOMPONENTS ACCESSOR METHODS ---------------//
	//---------------------------------------------------------------------//
	
	//---------------------------------------------------------------------//
	//--------------------- REFERENCES ACCESSOR METHODS -------------------//
	//---------------------------------------------------------------------//
	/**
	* Getter method for _pr_SrcRegisters which type is _i_Registers
	* <p>
	* This reference is promoted from _gen
	*
	* @return _r_SrcRegisters (Reference in _gen)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _i_Registers get_pr_SrcRegisters()
	{
		return _gen.get_r_SrcRegisters();
	}
	/**
	* Setter method for _pr_SrcRegisters which type is _i_Registers
	* <p>
	* This reference is promoted from _gen
	*
	* @param _arg (Component to set _r_SrcRegisters in _gen that implements _i_Registers)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_pr_SrcRegisters(_i_Registers _arg)
	{
		_gen.set_r_SrcRegisters(_arg);
	}			
	/**
	* Getter method for _pr_PCAccessors which type is _i_PCAccessors
	* <p>
	* This reference is promoted from _gen
	*
	* @return _r_PCAccessors (Reference in _gen)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _i_PCAccessors get_pr_PCAccessors()
	{
		return _gen.get_r_PCAccessors();
	}
	/**
	* Setter method for _pr_PCAccessors which type is _i_PCAccessors
	* <p>
	* This reference is promoted from _gen
	*
	* @param _arg (Component to set _r_PCAccessors in _gen that implements _i_PCAccessors)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_pr_PCAccessors(_i_PCAccessors _arg)
	{
		_gen.set_r_PCAccessors(_arg);
	}			
	/**
	* Getter method for _pr_TCache which type is _i_TCache
	* <p>
	* This reference is promoted from _gen
	*
	* @return _r_TCache (Reference in _gen)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public _i_TCache get_pr_TCache()
	{
		return _gen.get_r_TCache();
	}
	/**
	* Setter method for _pr_TCache which type is _i_TCache
	* <p>
	* This reference is promoted from _gen
	*
	* @param _arg (Component to set _r_TCache in _gen that implements _i_TCache)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	protected void set_pr_TCache(_i_TCache _arg)
	{
		_gen.set_r_TCache(_arg);
	}			
	//---------------------------------------------------------------------//
	//----------------- END OF REFERENCES ACCESSOR METHODS ----------------//	
	//---------------------------------------------------------------------//	
	
	//---------------------------------------------------------------------//
	//--------------------- SERVICES ACCESSOR METHODS ---------------------//
	//---------------------------------------------------------------------//
	
	/**
	* Getter method for the component that implements _i_ISA
	* <p>
	* This service is promoted from _target
	*
	* @return Component (_target or any subcomponent)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public Component get_i_ISA()
	{
		return _target.get_i_ISA();
	}
	/**
	* Getter method for the component that implements _i_Generate
	* <p>
	* This service is promoted from _gen
	*
	* @return Component (_gen or any subcomponent)
	*
	* <b>NOTE:</b> Code autmatically generated by Elaboration Language
	*/
	public Component get_i_Generate()
	{
		return _gen.get_i_Generate();
	}
	//---------------------------------------------------------------------//
	//------------------ END OF SERVICES ACCESSOR METHODS -----------------//
	//---------------------------------------------------------------------//
}	
